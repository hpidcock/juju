// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/apiserver/facades/agent/secretsmanager (interfaces: SecretsWatcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	state "github.com/juju/juju/state"
)

// MockSecretsWatcher is a mock of SecretsWatcher interface.
type MockSecretsWatcher struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsWatcherMockRecorder
}

// MockSecretsWatcherMockRecorder is the mock recorder for MockSecretsWatcher.
type MockSecretsWatcherMockRecorder struct {
	mock *MockSecretsWatcher
}

// NewMockSecretsWatcher creates a new mock instance.
func NewMockSecretsWatcher(ctrl *gomock.Controller) *MockSecretsWatcher {
	mock := &MockSecretsWatcher{ctrl: ctrl}
	mock.recorder = &MockSecretsWatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsWatcher) EXPECT() *MockSecretsWatcherMockRecorder {
	return m.recorder
}

// WatchSecretsRotationChanges mocks base method.
func (m *MockSecretsWatcher) WatchSecretsRotationChanges(arg0 string) state.SecretsRotationWatcher {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchSecretsRotationChanges", arg0)
	ret0, _ := ret[0].(state.SecretsRotationWatcher)
	return ret0
}

// WatchSecretsRotationChanges indicates an expected call of WatchSecretsRotationChanges.
func (mr *MockSecretsWatcherMockRecorder) WatchSecretsRotationChanges(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchSecretsRotationChanges", reflect.TypeOf((*MockSecretsWatcher)(nil).WatchSecretsRotationChanges), arg0)
}
