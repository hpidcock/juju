// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/csi-api/pkg/client/clientset/versioned (interfaces: Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	discovery "k8s.io/client-go/discovery"
	v1alpha1 "k8s.io/csi-api/pkg/client/clientset/versioned/typed/csi/v1alpha1"
	reflect "reflect"
)

// MockCsiClientSetInterface is a mock of Interface interface
type MockCsiClientSetInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCsiClientSetInterfaceMockRecorder
}

// MockCsiClientSetInterfaceMockRecorder is the mock recorder for MockCsiClientSetInterface
type MockCsiClientSetInterfaceMockRecorder struct {
	mock *MockCsiClientSetInterface
}

// NewMockCsiClientSetInterface creates a new mock instance
func NewMockCsiClientSetInterface(ctrl *gomock.Controller) *MockCsiClientSetInterface {
	mock := &MockCsiClientSetInterface{ctrl: ctrl}
	mock.recorder = &MockCsiClientSetInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCsiClientSetInterface) EXPECT() *MockCsiClientSetInterfaceMockRecorder {
	return m.recorder
}

// CsiV1alpha1 mocks base method
func (m *MockCsiClientSetInterface) CsiV1alpha1() v1alpha1.CsiV1alpha1Interface {
	ret := m.ctrl.Call(m, "CsiV1alpha1")
	ret0, _ := ret[0].(v1alpha1.CsiV1alpha1Interface)
	return ret0
}

// CsiV1alpha1 indicates an expected call of CsiV1alpha1
func (mr *MockCsiClientSetInterfaceMockRecorder) CsiV1alpha1() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CsiV1alpha1", reflect.TypeOf((*MockCsiClientSetInterface)(nil).CsiV1alpha1))
}

// Discovery mocks base method
func (m *MockCsiClientSetInterface) Discovery() discovery.DiscoveryInterface {
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery
func (mr *MockCsiClientSetInterfaceMockRecorder) Discovery() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*MockCsiClientSetInterface)(nil).Discovery))
}
